#!/bin/bash
set -e

cd "${1}"
exec 3>&1
exec 1>&2

PATH=/usr/local/bin:$PATH
payload=$(mktemp /tmp/resource-in.XXXXXX)
cat >$payload <&0
endpoint=$(jq -r '.source.url'                                   <$payload)
username=$(jq -r '.source.username'                              <$payload)
password=$(jq -r '.source.password'                              <$payload)
skipvfy=$( jq -r '(.source.insecure // "false")'                 <$payload)
method=$(  jq -r '(.params.method // .source.method // "event")' <$payload)
topic=$(   jq -r '(.params.topic // .source.topic)'              <$payload | envsubst)
file=$(    jq -r '(.params.file // null)'                        <$payload)
message=$( jq -r '(.params.message)'                             <$payload | envsubst)
link=$(    jq -r '(.params.link // null)'                        <$payload | envsubst)
ok=$(      jq -r '.params.ok'                                    <$payload)
meta=$(    jq -r '(.params.metadata // {})'                      <$payload | envsubst)

cat <<EOF


   ######  ##     ##  #######  ##     ## ######## ####
  ##    ## ##     ## ##     ## ##     ##    ##    ####
  ##       ##     ## ##     ## ##     ##    ##    ####
   ######  ######### ##     ## ##     ##    ##     ##
        ## ##     ## ##     ## ##     ##    ##
  ##    ## ##     ## ##     ## ##     ##    ##    ####
   ######  ##     ##  #######   #######     ##    ####


EOF

echo "∎ checking current user identity..."
id
echo

if command -v "update-ca-certificates" >/dev/null 2>&1; then
  echo "∎ updating ca certificate store..."
  mkdir -p /usr/local/share/ca-certificates
  jq -r '.source.ca // ""' <$payload > /usr/local/share/ca-certificates/custom.pem
  update-ca-certificates || true
  echo
fi

curlopts="-u $username:$password"
if [[ "$skipvfy" == "true" ]]; then
  echo "∎ skipping certificate verification..."
  curlopts=" -k"
fi

if [[ $link != "null" ]]; then
  link='"'"$link"'"'
fi

if [[ $file != "null" ]]; then
  message=$(cat $file | envsubst)
fi

case $method in
event*)
  body='{
  "topic"    : "'"$topic"'",
  "message"  : "'"$message"'",
  "ok"       : '"$ok"',
  "link"     : '"$link"',
  "metadata" : '"$meta"'
}'

  echo "∎ sending event up to ${endpoint}/events..."
  printf "%s\n" "$body" | sed -e 's/^/  /'
  curl -Lsv $curlopts ${endpoint}/events \
    -H Content-Type:application/json \
    --data-binary "$body" | jq -r .
  echo
  ;;

announce*)
  body='{
  "topic"    : "'"$topic"'",
  "message"  : "'"$message"'",
  "link"     : '"$link"',
  "metadata" : '"$meta"'
}'

  echo "∎ sending announcement up to ${endpoint}/announcements..."
  printf "%s\n" "$body" | sed -e 's/^/  /'
  curl -Lsv $curlopts ${endpoint}/announcements \
    -H Content-Type:application/json \
    --data-binary "$body" | jq -r .
  echo
  ;;

*)
  echo "∎ invalid method '$method'..."
  exit 1
  ;;
esac

echo "∎ complete."
echo '{"version":{"timestamp":"'$(date +%s)'"}}' >&3
